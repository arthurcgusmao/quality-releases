name: Azure Pipelines

variables:
  python.version: '3.7.6'

stages:

- stage: Build
  jobs:
  - job: Build
    pool:
      name: Hosted Ubuntu 1604
    steps:
    # Needed for Terraform VM deployment
    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: 'ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBKKu3ifmhAlFWRewCWho8ZPyJJkKlRFI46gzGbqKPYiP7NdiBzm46AbDVIhUfCMn02DHhpMVPJ+ahVufBsbyQSk='
        sshPublicKey: '$(VMSSHPublicKey)'
        sshKeySecureFile: 'udacity_proj3_vm'

    # # Prevent SSH from checking unknown hosts
    # - bash: |
    #     echo "StrictHostKeyChecking no" >> ~/.ssh/config
    #   displayName: "SSH: Disable unknown hosts check"

    - task: DownloadSecureFile@1
      name: tfvarsTask
      displayName: 'Download .tfvars file'
      inputs:
        secureFile: 'terraform.tfvars'
    - bash: |
        mv $(tfvarsTask.secureFilePath) ./terraform/terraform.tfvars

    # Deploy infra w/ Terraform
    - bash: |
        cd ./terraform
        terraform init
        terraform apply -auto-approve
        cd ..

    - bash: |
        echo terraform output -json | jq ".ip_address.value"
      name: VMIPAddress

    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: 'path/to/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi


- stage:
  jobs:
  - deployment: FakeRestAPI
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: ''
              appName: ''
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash

  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path
